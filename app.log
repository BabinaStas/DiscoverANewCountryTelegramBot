2023-02-06 19:10:37,559 INFO by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication [main] Starting DiscoverANewCountryBotApplication using Java 1.8.0_352 on DESKTOP-ASQFE2E with PID 5804 (E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes started by Gygabyte in E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot)
2023-02-06 19:10:37,567 INFO by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-02-06 19:10:38,233 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-02-06 19:10:38,339 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 92 ms. Found 1 JPA repository interfaces.
2023-02-06 19:10:38,786 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-02-06 19:10:38,857 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.9.Final
2023-02-06 19:10:39,083 INFO org.hibernate.annotations.common.Version [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-02-06 19:10:39,220 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-02-06 19:10:39,418 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-02-06 19:10:39,434 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL95Dialect
2023-02-06 19:10:40,200 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-02-06 19:10:40,208 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-02-06 19:10:41,593 INFO by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication [main] Started DiscoverANewCountryBotApplication in 4.591 seconds (JVM running for 6.216)
2023-02-06 19:10:55,332 INFO by.project.discoveranewcountrybot.service.BotService [discover_country_bot Telegram Executor] Replied to user: Stanislav
2023-02-06 19:12:03,021 INFO by.project.discoveranewcountrybot.service.BotService [discover_country_bot Telegram Executor] City add to DB: 
Name of a city: Borisov
Country: Belarus
Population: 0.3
Foundation: 3896-11-12

2023-02-06 19:31:15,702 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-02-06 19:31:15,718 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-02-06 19:31:15,766 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-02-06 19:31:26,218 INFO by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication [main] Starting DiscoverANewCountryBotApplication using Java 1.8.0_352 on DESKTOP-ASQFE2E with PID 5988 (E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes started by Gygabyte in E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot)
2023-02-06 19:31:26,220 INFO by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-02-06 19:31:26,727 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-02-06 19:31:26,826 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 88 ms. Found 1 JPA repository interfaces.
2023-02-06 19:31:27,221 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-02-06 19:31:27,268 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.9.Final
2023-02-06 19:31:27,435 INFO org.hibernate.annotations.common.Version [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-02-06 19:31:27,555 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-02-06 19:31:27,728 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-02-06 19:31:27,743 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL95Dialect
2023-02-06 19:31:28,301 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-02-06 19:31:28,310 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-02-06 19:31:28,846 WARN org.springframework.context.annotation.AnnotationConfigApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botInitializer': Unsatisfied dependency expressed through field 'botService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botService' defined in file [E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes\by\project\discoveranewcountrybot\service\BotService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
2023-02-06 19:31:28,847 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-02-06 19:31:28,852 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-02-06 19:31:28,864 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-02-06 19:31:28,898 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-02-06 19:31:28,996 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botInitializer': Unsatisfied dependency expressed through field 'botService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botService' defined in file [E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes\by\project\discoveranewcountrybot\service\BotService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication.main(DiscoverANewCountryBotApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botService' defined in file [E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes\by\project\discoveranewcountrybot\service\BotService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 47 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1051)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:566)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87)
	at java.util.Optional.map(Optional.java:215)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 57 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:119)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:259)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:93)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103)
	... 79 common frames omitted
Caused by: java.lang.IllegalStateException: Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.throwExceptionOnArgumentMismatch(PartTreeJpaQuery.java:161)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.validate(PartTreeJpaQuery.java:147)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:90)
	... 83 common frames omitted
2023-02-06 19:32:59,789 INFO by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication [main] Starting DiscoverANewCountryBotApplication using Java 1.8.0_352 on DESKTOP-ASQFE2E with PID 2020 (E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes started by Gygabyte in E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot)
2023-02-06 19:32:59,793 INFO by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-02-06 19:33:00,442 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-02-06 19:33:00,555 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 98 ms. Found 1 JPA repository interfaces.
2023-02-06 19:33:01,016 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-02-06 19:33:01,075 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.9.Final
2023-02-06 19:33:01,277 INFO org.hibernate.annotations.common.Version [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-02-06 19:33:01,412 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-02-06 19:33:01,607 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-02-06 19:33:01,624 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL95Dialect
2023-02-06 19:33:03,138 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-02-06 19:33:03,161 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-02-06 19:33:04,060 WARN org.springframework.context.annotation.AnnotationConfigApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botInitializer': Unsatisfied dependency expressed through field 'botService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botService' defined in file [E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes\by\project\discoveranewcountrybot\service\BotService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
2023-02-06 19:33:04,061 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-02-06 19:33:04,067 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-02-06 19:33:04,081 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-02-06 19:33:04,117 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-02-06 19:33:04,205 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botInitializer': Unsatisfied dependency expressed through field 'botService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botService' defined in file [E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes\by\project\discoveranewcountrybot\service\BotService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication.main(DiscoverANewCountryBotApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botService' defined in file [E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes\by\project\discoveranewcountrybot\service\BotService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 47 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1051)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:566)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87)
	at java.util.Optional.map(Optional.java:215)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 57 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:119)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:259)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:93)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103)
	... 79 common frames omitted
Caused by: java.lang.IllegalStateException: Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.throwExceptionOnArgumentMismatch(PartTreeJpaQuery.java:161)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.validate(PartTreeJpaQuery.java:147)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:90)
	... 83 common frames omitted
2023-02-06 19:33:38,411 INFO by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication [main] Starting DiscoverANewCountryBotApplication using Java 1.8.0_352 on DESKTOP-ASQFE2E with PID 380 (E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes started by Gygabyte in E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot)
2023-02-06 19:33:38,415 INFO by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-02-06 19:33:39,060 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-02-06 19:33:39,185 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 111 ms. Found 1 JPA repository interfaces.
2023-02-06 19:33:39,643 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-02-06 19:33:39,700 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.9.Final
2023-02-06 19:33:39,919 INFO org.hibernate.annotations.common.Version [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-02-06 19:33:40,074 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-02-06 19:33:40,323 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-02-06 19:33:40,345 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL95Dialect
2023-02-06 19:33:41,167 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-02-06 19:33:41,180 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-02-06 19:33:41,720 WARN org.springframework.context.annotation.AnnotationConfigApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botInitializer': Unsatisfied dependency expressed through field 'botService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botService' defined in file [E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes\by\project\discoveranewcountrybot\service\BotService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
2023-02-06 19:33:41,720 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-02-06 19:33:41,726 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-02-06 19:33:41,740 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-02-06 19:33:41,781 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-02-06 19:33:41,868 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botInitializer': Unsatisfied dependency expressed through field 'botService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botService' defined in file [E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes\by\project\discoveranewcountrybot\service\BotService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication.main(DiscoverANewCountryBotApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botService' defined in file [E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes\by\project\discoveranewcountrybot\service\BotService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 47 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1051)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:566)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87)
	at java.util.Optional.map(Optional.java:215)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 57 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:119)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:259)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:93)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103)
	... 79 common frames omitted
Caused by: java.lang.IllegalStateException: Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.throwExceptionOnArgumentMismatch(PartTreeJpaQuery.java:161)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.validate(PartTreeJpaQuery.java:147)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:90)
	... 83 common frames omitted
2023-02-06 19:35:04,111 INFO by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication [main] Starting DiscoverANewCountryBotApplication using Java 1.8.0_352 on DESKTOP-ASQFE2E with PID 8816 (E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes started by Gygabyte in E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot)
2023-02-06 19:35:04,114 INFO by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-02-06 19:35:04,690 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-02-06 19:35:04,805 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 103 ms. Found 1 JPA repository interfaces.
2023-02-06 19:35:05,333 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-02-06 19:35:05,392 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.9.Final
2023-02-06 19:35:05,563 INFO org.hibernate.annotations.common.Version [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-02-06 19:35:05,673 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-02-06 19:35:05,840 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-02-06 19:35:05,856 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL95Dialect
2023-02-06 19:35:06,422 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-02-06 19:35:06,431 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-02-06 19:35:06,697 WARN org.springframework.context.annotation.AnnotationConfigApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botInitializer': Unsatisfied dependency expressed through field 'botService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botService' defined in file [E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes\by\project\discoveranewcountrybot\service\BotService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
2023-02-06 19:35:06,698 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-02-06 19:35:06,700 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-02-06 19:35:06,704 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-02-06 19:35:06,712 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-02-06 19:35:06,740 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botInitializer': Unsatisfied dependency expressed through field 'botService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botService' defined in file [E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes\by\project\discoveranewcountrybot\service\BotService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication.main(DiscoverANewCountryBotApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botService' defined in file [E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes\by\project\discoveranewcountrybot\service\BotService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 47 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1051)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:566)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87)
	at java.util.Optional.map(Optional.java:215)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 57 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:119)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:259)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:93)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103)
	... 79 common frames omitted
Caused by: java.lang.IllegalStateException: Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.throwExceptionOnArgumentMismatch(PartTreeJpaQuery.java:161)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.validate(PartTreeJpaQuery.java:147)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:90)
	... 83 common frames omitted
2023-02-06 19:35:45,642 INFO by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication [main] Starting DiscoverANewCountryBotApplication using Java 1.8.0_352 on DESKTOP-ASQFE2E with PID 9056 (E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes started by Gygabyte in E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot)
2023-02-06 19:35:45,645 INFO by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-02-06 19:35:46,293 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-02-06 19:35:46,414 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 107 ms. Found 1 JPA repository interfaces.
2023-02-06 19:35:46,879 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-02-06 19:35:46,933 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.9.Final
2023-02-06 19:35:47,130 INFO org.hibernate.annotations.common.Version [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-02-06 19:35:47,272 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-02-06 19:35:47,492 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-02-06 19:35:47,511 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL95Dialect
2023-02-06 19:35:48,993 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-02-06 19:35:49,018 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-02-06 19:35:49,744 WARN org.springframework.context.annotation.AnnotationConfigApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botInitializer': Unsatisfied dependency expressed through field 'botService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botService' defined in file [E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes\by\project\discoveranewcountrybot\service\BotService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
2023-02-06 19:35:49,744 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-02-06 19:35:49,749 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-02-06 19:35:49,761 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-02-06 19:35:49,791 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-02-06 19:35:49,858 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botInitializer': Unsatisfied dependency expressed through field 'botService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botService' defined in file [E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes\by\project\discoveranewcountrybot\service\BotService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication.main(DiscoverANewCountryBotApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botService' defined in file [E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes\by\project\discoveranewcountrybot\service\BotService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 47 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1051)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:566)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87)
	at java.util.Optional.map(Optional.java:215)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 57 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:119)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:259)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:93)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103)
	... 79 common frames omitted
Caused by: java.lang.IllegalStateException: Method public abstract java.util.Optional by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.throwExceptionOnArgumentMismatch(PartTreeJpaQuery.java:161)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.validate(PartTreeJpaQuery.java:147)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:90)
	... 83 common frames omitted
2023-02-06 19:36:09,989 INFO by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication [main] Starting DiscoverANewCountryBotApplication using Java 1.8.0_352 on DESKTOP-ASQFE2E with PID 5688 (E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes started by Gygabyte in E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot)
2023-02-06 19:36:09,992 INFO by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-02-06 19:36:10,562 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-02-06 19:36:10,672 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 97 ms. Found 1 JPA repository interfaces.
2023-02-06 19:36:11,118 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-02-06 19:36:11,168 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.9.Final
2023-02-06 19:36:11,355 INFO org.hibernate.annotations.common.Version [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-02-06 19:36:11,515 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-02-06 19:36:11,840 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-02-06 19:36:11,888 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL95Dialect
2023-02-06 19:36:13,760 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-02-06 19:36:13,789 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-02-06 19:36:16,957 INFO by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication [main] Started DiscoverANewCountryBotApplication in 7.438 seconds (JVM running for 8.692)
2023-02-06 19:36:17,583 INFO by.project.discoveranewcountrybot.service.BotService [discover_country_bot Telegram Executor] Replied to user: Stanislav
2023-02-06 19:36:17,911 INFO by.project.discoveranewcountrybot.service.BotService [discover_country_bot Telegram Executor] Replied to user: Stanislav
2023-02-06 19:55:57,503 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-02-06 19:55:57,516 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-02-06 19:55:57,551 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-02-06 19:56:10,752 INFO by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication [main] Starting DiscoverANewCountryBotApplication using Java 1.8.0_352 on DESKTOP-ASQFE2E with PID 384 (E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes started by Gygabyte in E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot)
2023-02-06 19:56:10,756 INFO by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-02-06 19:56:11,521 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-02-06 19:56:11,651 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 114 ms. Found 1 JPA repository interfaces.
2023-02-06 19:56:12,155 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-02-06 19:56:12,217 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.9.Final
2023-02-06 19:56:12,418 INFO org.hibernate.annotations.common.Version [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-02-06 19:56:12,563 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-02-06 19:56:12,772 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-02-06 19:56:12,791 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL95Dialect
2023-02-06 19:56:13,519 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-02-06 19:56:13,529 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-02-06 19:56:14,077 WARN org.springframework.context.annotation.AnnotationConfigApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botInitializer': Unsatisfied dependency expressed through field 'botService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botService' defined in file [E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes\by\project\discoveranewcountrybot\service\BotService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
2023-02-06 19:56:14,080 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-02-06 19:56:14,087 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-02-06 19:56:14,107 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-02-06 19:56:14,156 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-02-06 19:56:14,258 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botInitializer': Unsatisfied dependency expressed through field 'botService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botService' defined in file [E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes\by\project\discoveranewcountrybot\service\BotService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication.main(DiscoverANewCountryBotApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botService' defined in file [E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes\by\project\discoveranewcountrybot\service\BotService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 47 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1051)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:566)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87)
	at java.util.Optional.map(Optional.java:215)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 57 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:119)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:259)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:93)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103)
	... 79 common frames omitted
Caused by: java.lang.IllegalStateException: Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.throwExceptionOnArgumentMismatch(PartTreeJpaQuery.java:161)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.validate(PartTreeJpaQuery.java:147)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:90)
	... 83 common frames omitted
2023-02-06 19:56:27,919 INFO by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication [main] Starting DiscoverANewCountryBotApplication using Java 1.8.0_352 on DESKTOP-ASQFE2E with PID 8800 (E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes started by Gygabyte in E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot)
2023-02-06 19:56:27,923 INFO by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-02-06 19:56:28,662 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-02-06 19:56:29,044 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 368 ms. Found 1 JPA repository interfaces.
2023-02-06 19:56:29,882 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-02-06 19:56:29,996 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.9.Final
2023-02-06 19:56:30,424 INFO org.hibernate.annotations.common.Version [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-02-06 19:56:30,728 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-02-06 19:56:31,123 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-02-06 19:56:31,172 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL95Dialect
2023-02-06 19:56:32,623 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-02-06 19:56:32,648 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-02-06 19:56:33,406 WARN org.springframework.context.annotation.AnnotationConfigApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botInitializer': Unsatisfied dependency expressed through field 'botService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botService' defined in file [E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes\by\project\discoveranewcountrybot\service\BotService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
2023-02-06 19:56:33,406 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-02-06 19:56:33,412 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-02-06 19:56:33,420 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-02-06 19:56:33,437 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-02-06 19:56:33,497 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botInitializer': Unsatisfied dependency expressed through field 'botService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botService' defined in file [E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes\by\project\discoveranewcountrybot\service\BotService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at by.project.discoveranewcountrybot.DiscoverANewCountryBotApplication.main(DiscoverANewCountryBotApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'botService' defined in file [E:\1.  JAVA Lab\TelegramBotDiscoverANewCountry\DiscoverANewCountryBot\target\classes\by\project\discoveranewcountrybot\service\BotService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addCityCommand': Unsatisfied dependency expressed through field 'cityRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cityRepository' defined in by.project.discoveranewcountrybot.model.CityRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 47 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String); Reason: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1051)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:566)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87)
	at java.util.Optional.map(Optional.java:215)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 57 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String)! Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:119)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:259)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:93)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103)
	... 79 common frames omitted
Caused by: java.lang.IllegalStateException: Method public abstract by.project.discoveranewcountrybot.model.City by.project.discoveranewcountrybot.model.CityRepository.findByNameAndCountry(java.lang.String) expects at least 2 arguments but only found 1. This leaves an operator of type SIMPLE_PROPERTY for property country unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.throwExceptionOnArgumentMismatch(PartTreeJpaQuery.java:161)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.validate(PartTreeJpaQuery.java:147)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:90)
	... 83 common frames omitted
